#! /usr/bin/env bash

# Versions
# --------
export FLUO_VERSION=1.0.0-incubating
export HADOOP_VERSION=2.7.2
export ZOOKEEPER_VERSION=3.4.6
export ACCUMULO_VERSION=1.7.1
export SPARK_VERSION=1.6.1
export SPARK_BIN_VERSION=$SPARK_VERSION-bin-hadoop2.6

# MD5 Hashes
# ----------
# Hashes below match default versions above.  If you change a version above,
# you must also change the hash below.
export FLUO_MD5=fce16f52ea594fe2a291750df3f8efee
export HADOOP_MD5=c442bd89b29cab9151b5987793b94041
export ZOOKEEPER_MD5=971c379ba65714fd25dc5fe8f14e9ad1
export ACCUMULO_MD5=4b114b00709f2238491ee56696535ad7
export SPARK_MD5=667a62d7f289479a19da4b563e7151d4
export INFLUXDB_MD5=6abb3d5df9b69aeb9bae37d0889bf67a
export GRAFANA_MD5=e5fe934a27e94f954e87f5d18043a40e

# Download configuration
# ----------------------
# Directory where all depedency packages are downloaded
export DOWNLOADS=$FLUO_DEV/downloads
# Tarball file names
export ACCUMULO_TARBALL=accumulo-$ACCUMULO_VERSION-bin.tar.gz
export HADOOP_TARBALL=hadoop-"$HADOOP_VERSION".tar.gz
export ZOOKEEPER_TARBALL=zookeeper-"$ZOOKEEPER_VERSION".tar.gz
export SPARK_TARBALL=spark-"$SPARK_BIN_VERSION".tgz
export FLUO_TARBALL=fluo-$FLUO_VERSION-bin.tar.gz

# Building Accumulo
#------------------
# If set, 'fluo_dev fetch' will build (instead of downloading) an Accumulo tarball
# from that directory and copy it to the downloads directory.

#export ACCUMULO_REPO=

# Comment out the following if block if you don't want to automatically detect
# version from the pom.xml. This could be useful if you want to switch branches
# in your workspace and don't want the detected version to change.
if [[ -n "$ACCUMULO_REPO" ]]; then
  # Detect the version from the accumulo pom.xml in the workspace
  ACCUMULO_VERSION=$(xmllint --shell "$ACCUMULO_REPO"/pom.xml <<<'xpath /*[local-name()="project"]/*[local-name()="version"]/text()' | grep content= | cut -f2 -d=)
  export ACCUMULO_VERSION
  export ACCUMULO_TARBALL=accumulo-$ACCUMULO_VERSION-bin.tar.gz
fi

# Building Fluo
# -------------
# If set, 'fluo_dev fetch' will build (rather than download) a Fluo tarball
# from that directory and copy it to the downloads directory.

#export FLUO_REPO=

# Comment out the following if block if you don't want to automatically detect
# version from the pom.xml. This could be useful if you want to switch branches
# in your workspace and don't want the detected version to change.
if [[ -n "$FLUO_REPO" ]]; then
  # Detect the version from the accumulo pom.xml in the workspace
  FLUO_VERSION=$(xmllint --shell "$FLUO_REPO"/pom.xml <<<'xpath /*[local-name()="project"]/*[local-name()="version"]/text()' | grep content= | cut -f2 -d=)
  export FLUO_VERSION
  export FLUO_TARBALL=fluo-$FLUO_VERSION-bin.tar.gz
fi

# Spark 
# -----
# Starts Spark History Server if true
export START_SPARK_HIST_SERVER=true

# Installation directories
# ------------------------
# Software installation directory
export INSTALL=$FLUO_DEV/install
# Directory where all Fluo dependencies store their data
export DATA_DIR=$INSTALL/data
# Home directories
export FLUO_HOME=$INSTALL/fluo-$FLUO_VERSION
export ZOOKEEPER_HOME=$INSTALL/zookeeper-$ZOOKEEPER_VERSION
export HADOOP_PREFIX=$INSTALL/hadoop-$HADOOP_VERSION
export ACCUMULO_HOME=$INSTALL/accumulo-$ACCUMULO_VERSION
export SPARK_HOME=$INSTALL/spark-$SPARK_BIN_VERSION
# Config directories
export HADOOP_CONF_DIR=$HADOOP_PREFIX/etc/hadoop
# Log directories
export LOGS_DIR=$INSTALL/logs
export ACCUMULO_LOG_DIR=$LOGS_DIR/accumulo
export HADOOP_LOG_DIR=$LOGS_DIR/hadoop
export YARN_LOG_DIR=$LOGS_DIR/yarn
export ZOO_LOG_DIR=$LOGS_DIR/zookeeper

# Accumulo configuration
# ----------------------
# Accumulo instance name
export ACCUMULO_INSTANCE=instance17
# Accumulo user
export ACCUMULO_USER=root
# Accumulo password
export ACCUMULO_PASSWORD=secret

# Metrics configuration
# ------------------------
# If true, Uno will setup metrics (i.e InfluxDB & Grafana)
# Metrics can only be set up on Linux.  Mac OS X is not supported.
export SETUP_METRICS=false
# InfuxDB configuration
export INFLUXDB_VERSION=0.9.4.2
export INFLUXDB_HOME=$INSTALL/influxdb-"$INFLUXDB_VERSION"
# Grafana configuration
export GRAFANA_VERSION=2.5.0
export GRAFANA_HOME=$INSTALL/grafana-"$GRAFANA_VERSION"

#Performance Profiles
#--------------------

PERFORMACE_PROFILE=8GX2

case "$PERFORMACE_PROFILE" in
  8GX2)
    #Enable Accumulo native map
    export ACCUMULO_USE_NATIVE_MAP=false
    #Accumulo tserver jvm heap size
    export ACCUMULO_TSERV_MEM=768m
    #Accumulo data cache size
    export ACCUMULO_DCACHE_SIZE=256M
    #Accumulo index cache size
    export ACCUMULO_ICACHE_SIZE=128M
    #Accumulo in mem map size
    export ACCUMULO_IMAP_SIZE=128M
    # Yarn Node Manager max memory (in MB)
    export YARN_NM_MEM_MB=8192
    # Yarn Node Manager max cpu vcores
    export YARN_NM_CPU_VCORES=8
    # Number of threads per worker process
    export FLUO_WORKER_THREADS=10
    # Worker process memory
    export FLUO_WORKER_MEM_MB=1024
    # Number worker processes
    export FLUO_WORKER_INSTANCES=1
    ;;
  32GX4)
    export ACCUMULO_USE_NATIVE_MAP=false
    export ACCUMULO_TSERV_MEM=6G
    export ACCUMULO_DCACHE_SIZE=2G
    export ACCUMULO_ICACHE_SIZE=1G
    export ACCUMULO_IMAP_SIZE=1G
    export YARN_NM_MEM_MB=16384
    export YARN_NM_CPU_VCORES=8
    export FLUO_WORKER_THREADS=64
    export FLUO_WORKER_MEM_MB=4096
    export FLUO_WORKER_INSTANCES=2
    ;;
  *)
   echo "Unknown performance profile"
   exit 1;
   ;;
esac
